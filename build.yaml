steps:
 - kind: createNamespace
   name: default_ns
   namespaceName: default
   public: true
 - kind: buildImage
   name: git_image
   dockerFile:
     inline: |
       FROM ubuntu:18.04
       RUN apt-get update && apt-get install -y git
   contextPath: .
 - kind: runImage
   name: create_git_repo
   image:
     valueFrom:
       git_image.image
   script: |
     set -ex

     cd /io
     mkdir foo
     cd foo
     git config --global user.email "you@example.com"
     git config --global user.name "Your Name"
     git init

     cat >Dockerfile <<EOF
     FROM ubuntu:18.04
     COPY uncompressed-file .
     EOF

     git add Dockerfile
     git commit -m "first commit"

     cd ..
     tar -czvf foo.tgz foo

     cat >uncompressed-file <<EOF
     this is an uncompressed file
     EOF
   outputs:
     - from: /io/foo.tgz
       to: /foo.tgz
     - from: /io/uncompressed-file
       to: /uncompressed-file
   dependsOn:
     - git_image
 - kind: buildImage
   name: verify_decompress_works
   dockerFile: /foo/Dockerfile
   contextPath: .
   inputs:
     - from: /foo.tgz
       to: /
       extract:
         - foo/Dockerfile
     - from: /uncompressed-file
       to: /uncompressed-file
   image:
     valueFrom:
       git_image.image
   dependsOn:
     - git_image
     - create_git_repo
 - kind: buildImage
   name: base_image
   dockerFile: docker/Dockerfile.base
   contextPath: .
   publishAs: base
 - kind: buildImage
   name: service_base_image
   dockerFile: docker/Dockerfile.service-base
   contextPath: .
   publishAs: service-base
   dependsOn:
    - base_image
 - kind: buildImage
   name: hello_image
   dockerFile: ci/test/resources/Dockerfile
   contextPath: .
   publishAs: ci-hello
   dependsOn:
    - service_base_image
 - kind: runImage
   name: check_hello
   image:
     valueFrom: hello_image.image
   script: |
     set -ex
     python3 -m flake8 /hello/hello.py
   dependsOn:
     - hello_image
 - kind: createDatabase
   name: hello_database
   databaseName: hello
   namespace:
     valueFrom: default_ns.name
   dependsOn:
    - default_ns
 - kind: deploy
   name: deploy_hello
   namespace:
     valueFrom: default_ns.name
   config: ci/test/resources/deployment.yaml
   wait:
    - kind: Service
      name: hello
      for: alive
   dependsOn:
    - default_ns
    - hello_image
    - check_hello
    - hello_database
